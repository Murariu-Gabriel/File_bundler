// In here there will be stored all the styles that should be accessible globally
@use "../SCSS/Abstracts/index.scss" as *;


// global resets

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
}


// I need to chose 4 colors 

// background
// thing that will sit on top of background
// things to be
// footer nav color
// accent/button color


#root{
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

body {
  // overflow-x: hidden;

 
  
  // background-color: #000000;
  // color: #F0F0F0;

  // accent
  // color: #00A5FF;



  
   // valve classic
  // background-color: darkgray;
  // color: $white;

  //half life 
  // background-color: darkgray;
  // color: $white;

  // left 4 dead
  // background-color: #3D9A3D;
  // color: darkgray;

  // cs go
  // background-color: #2C3E50;
  // color:  White;

  // tf2
  // background-color: #F4E2A6;
  // color:  #3A2F0B;

  .button_1{

    //valve classic
    // background-color: #FF6600;
    // background-color: #007ACC;

    //half life 
    // background-color: #FF6D00;
    // background-color: #A8FF00;

    //left 4 dead
    // background-color: #FF0000;

    //cs go
    // background-color: #F1C40F;
    // background-color: #3498DB;

    //tf2
    // background-color: #0000FF;
    // background-color: #FF0000;

  }
 
}

button{
  font-size: initial;
}

a {
  text-decoration: none;

 color: $white;
  
}

.link{
  
  // could add some padding and use it for the login forgot password
  color: $black;

     
  
}

ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

input {
  &:not([type="checkbox"]) {
    font-weight: bold;
    // border: 2px solid $gray;
    border: none;
    border-bottom: 2px solid $gray;
    padding: $s_spacing $s_padding + 0.3rem;
    caret-color: orange;
    width: 100%;
  }

  &::placeholder {
    color: $gray;
  }

  &:focus {
    outline: none;
  }
}

// classes needed in general





.input_container {
  margin-top: $s_spacing;
  display: flex;
  flex-wrap: wrap;
  gap: $s_spacing;
  position: relative;

  span {
    margin: 0 0 0 auto;
  }

  input {
    padding-left: 1.5rem;
    background-color: inherit;
  }

  .floating_message{
    background-color: $white;
    border-radius: $base-border-radius;
    position: absolute;
    bottom: 110%;
    padding: $m_padding;
    text-align: start;

  }

  svg {
    position: absolute;
    top: 2rem;
  }


  .sh-password{
    position: absolute;
    right: 2rem;
    padding:0 ;
    border: none;
    background: none;
    z-index: 1;

    svg{
      transition: color 0.3s ease-in-out;
 
     // pointer-events:none;
   
    
      &:hover{
        cursor: pointer;

        &[stroke]{
          color: orange;
        }
      }
    }

  }
}

.input_container_error {
  fill: $error_red;
  color: $error_red;
  input{
    border-bottom: 2px solid $error_red;
  }
}

.hide {
  display: none;
}

.empty_button{
  border: none;
  font-size: inherit;
  background: none;
  cursor: pointer;
  text-transform: capitalize;
}

.button_1{
  color: $white;
  border: none;
  border-radius: $base-border-radius;
  background: $black;
  margin-top: $s_spacing;
  padding: $s_padding;
  cursor: pointer;
  transition: background-color 0.3s ease-in ;
  text-transform: capitalize;
  box-shadow: 0px 24px 50px -12px rgba(0,0,0,0.26);
  
  &:hover{
      background-color: lighten($black, 25%);
  }
}

.button_2 {
  border: none;
  font-size: inherit;
  background: none;
  cursor: pointer;
  transition: color 0.3s ease-in ;
  text-transform: capitalize;

  &:hover{
      color: orange
  }
}

.button_3{
  border: none;
  padding: 0.5rem 0.3rem;

  font-size: inherit;
  background: none;
  cursor: pointer;
  transition: color 0.3s ease-in, box-shadow 0.3s ease-in-out ;

   &:hover{
      color: orange;
      
  }
}



// Animations 

@keyframes nav_slide_out {

  0%{
    right: -50%;
  }

  100%{
    right: 0;
  }
  
}

@keyframes nav_slide_in {

  100%{
    right: 0;
  }

  0%{
    right: -50%;
  }
  
}


